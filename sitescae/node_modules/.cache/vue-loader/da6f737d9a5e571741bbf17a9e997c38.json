{"remainingRequest":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\src\\views\\home\\Scae.vue?vue&type=template&id=253adf1a&scoped=true&","dependencies":[{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\src\\views\\home\\Scae.vue","mtime":1654283380943},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654273329654},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1654273349614},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654273329654},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-loader\\lib\\index.js","mtime":1654273349611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPCEtLSBTdGFydCBIZWFkZXIgQXJlYSAtLT4KICA8SGVhZGVyPgogICAgPGltZwogICAgICBoZWlnaHQ9IjQwcHgiCiAgICAgIHNsb3Q9ImxvZ28iCiAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL2ltYWdlcy9sb2dvL2xvZ29zY2FlLnBuZyIKICAgICAgY2xhc3M9ImxvZ28tbGlnaHQiCiAgICAvPgogICAgPGltZwogICAgICBzbG90PSJsb2dvLWRhcmsiCiAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL2ltYWdlcy9sb2dvL2xvZ29zY2FlLnBuZyIKICAgICAgY2xhc3M9ImxvZ28tZGFyayIKICAgIC8+CiAgPC9IZWFkZXI+CiAgPCEtLSBFbmQgSGVhZGVyIEFyZWEgLS0+CgogIDwhLS0gU3RhcnQgU2xpZGVyIEFyZWEgIC0tPgogIDxkaXYgY2xhc3M9InJuLXNsaWRlci1hcmVhIiBpZD0iaG9tZSI+CiAgICA8ZGl2CiAgICAgIGNsYXNzPSJzbGlkZSBzbGlkZS1zdHlsZS0yIHNsaWRlci1wYXJhbGF4IGQtZmxleCBhbGlnbi1jZW50ZXIganVzdGlmeS1jZW50ZXIgYmdfaW1hZ2UgYmdfaW1hZ2UtLTMyIgogICAgICBkYXRhLWJsYWNrLW92ZXJsYXk9IjQiCiAgICA+CiAgICAgIDxCYW5uZXI+CiAgICAgICAgPGgxIHNsb3Q9ImhlYWRpbmctdGl0bGUiIGNsYXNzPSJoZWFkaW5nLXRpdGxlIHRoZW1lLWdyYWRpZW50Ij4KICAgICAgICAgIFNDQUUKICAgICAgICA8L2gxPgogICAgICAgIDxwIHNsb3Q9ImRlc2NyaXB0aW9uIiBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgICAgICAgR2VzdMOjbyBkZSBDYXJ0ZWlyYSBkZSBsb3RlcyBlIHRlcnJlbm9zLgogICAgICAgIDwvcD4KICAgICAgPC9CYW5uZXI+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8IS0tIEVuZCBTbGlkZXIgQXJlYSAgLS0+CiAgIAogICAgPCEtLSA8ZGl2CiAgICAgICAgICBjbGFzcz0icm4tY29udGVudC1ib3gtYXJlYSBybi1jb250ZW50LWJveC1zdHlsZS0tMSBiZ19jb2xvci0tMSIKICAgICAgICAgIGlkPSJjb3JyZXRvciIKICAgICAgICA+CiAgICAgICAgICA8di1yb3cgY2xhc3M9InJvdy0tMCIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgIDx2LWNvbCBsZz0iNiIgbWQ9IjEyIiBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGh1bWJuYWlsIj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIgIgogICAgICAgICAgICAgICAgICBzcmM9Ii4uLy4uL2Fzc2V0cy9pbWFnZXMvZmVhdHVyZWQvY29ycmV0b3IucG5nIgogICAgICAgICAgICAgICAgICBhbHQ9IkZlYXR1cmVkIEltYWdlcyIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdi1jb2w+CgogICAgICAgICAgICA8di1jb2wgbWQ9IjEyIiBsZz0iNiIgY29scz0iMTIiIGNsYXNzPSJtdF9sZy0tNTAgbXRfbWQtLTMwIG10X3NtLS0zMCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic3VidGl0bGUiPjwvcD4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iZm9udFdlaWdodDUwMCI+Q29udHJhdG9zPC9oMj4KICAgICAgICAgICAgICAgIDxwPjxzcGFuPlZvY8OqPC9zcGFuPiBjb20gYWNlc3NvIGEgY2VudGVuYXMgZGUgY29uc3RydXRvcmFzPC9wPgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgIEFjZXNzZSBtaWxoYXJlcyBkZSBpbcOzdmVpcywgbmVnb2NpZSBlIGZlY2hlIG5lZ8OzY2lvIGRpcmV0byBjb20gYXMKICAgICAgICAgICAgICAgICAgY29uc3RydXRvcmFzLgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgY2xhc3M9InJuLWJ1dHRvbi1zdHlsZS0tMiBtdC0tMTAgbXRfc20tLTMwIG10X21kLS0zMCIKICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL2RldmVsb3BtZW50Lm5ldm9vbi5jb20uYnIvY2FkYXN0cm8iCiAgICAgICAgICAgICAgICAgID48c3Bhbj5FbnRyZSBwYXJhIGEgTmV2b29uPC9zcGFuPjwvYQogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgPC92LXJvdz4KICAgICAgICA8L2Rpdj4gLS0+CgogICAgCiAgICA8di1yb3cgY2xhc3M9InNwYWNpbmctdGV4dCBwdC0tMTAwIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQSI+CiAgICAgIDx2LWNvbCBsZz0iMTIiIGNsYXNzPSJwbC0xMiI+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi10aXRsZSB0ZXh0LWxlZnQgbWItLTAgbWJfc20tLTAgbWJfbWQtLTAiPgogICAgICAgICAgPGgyPlNvZnR3YXJlIHBhcmEgR2VyZW5jaWFyIHNldXMgTG90ZWFtZW50b3M8L2gyPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIENvbmhlw6dhIGFzIHZhbnRhZ2VucyBxdWUgbyBzZXJ2acOnbyBkYSBTQ0FFIHRyYXogcHJhIHZvY8OqLAogICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgZ2VyZW5jaWUgc2V1cyBsb3RlcyBzZW0gYnVyb2NyYWNpYS4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC92LWNvbD4KICAgIDwvdi1yb3c+CgogICAgPGRpdiBjbGFzcz0icm4tY29udGVudC1ib3gtYXJlYSBybi1jb250ZW50LWJveC1zdHlsZS0tMSBiZ19jb2xvci0tMSBwdC0tNTAiIGlkPSJzZXJ2acOnb3MiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRkFGQUZBIj4KICAgICAgPHYtcm93IGp1c3RpZnk9ImNlbnRlciIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgPHYtY29sIGxnPSI0IiBtZD0iMTIiIGNvbHM9IjEyIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2lnbmVyLXRodW1ibmFpbCBpbWciPgogICAgICAgICAgICA8aW1nIHNyYz0iLi4vLi4vYXNzZXRzL2ltYWdlcy9zZXJ2aWNvL2NvbnRyYXRvLnN2ZyIgYWx0PSJGZWF0dXJlZCBJbWFnZXMiLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdi1jb2w+CgogICAgICAgIDx2LWNvbCBtZD0iMTIiIGxnPSI2IiBjb2xzPSIxMiIgY2xhc3M9Im10X2xnLS01MCBtdF9tZC0tMzAgbXRfc20tLTMwIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPgogICAgICAgICAgICA8cCBjbGFzcz0ic3VidGl0bGUiPjwvcD4KICAgICAgICAgICAgPGgyIGNsYXNzPSJmb250V2VpZ2h0NTAwIj5Db250cmF0b3M8L2gyPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgQW8gcmVjZWJlciBhIHByb3Bvc3RhIGRvIHNldSBjb3JyZXRvciBlIGNhZGFzdHJhciBubyBzaXN0ZW1hIHZvY8OqIGluaWNpYSB0b2RvIG8gY29udHJvbGUgZGEgb3BlcmHDp8OjbywgZGVzZGUgYSBlbGFib3Jhw6fDo28gZGEgcHJvbWVzc2EgZGUgY29tcHJhIGUgdmVuZGEsIGdlcmFyIGEgZW50cmFkYSBjb20gb3MgdmFsb3JlcyBwYXJhIGEgbG90ZWFkb3JhIG91IHBhcmEgYSB2ZW5kZWRvcmEsCiAgICAgICAgICAgIGdlcmFyIHBhcmNlbGFzIGRvIGZpbmFuY2lhbWVudG8sIGFkaXRhciBjb250cmF0b3MsIGVudmlvIGRlIGJvbGV0b3MgZSBlLW1haWxzICBhdXRvbcOhdGljb3MuCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L2Rpdj4gCgogICAgPGRpdiBjbGFzcz0icm4tY29udGVudC1ib3gtYXJlYSBybi1jb250ZW50LWJveC1zdHlsZS0tMSBiZ19jb2xvci0tMSIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGQUZBRkEiPgogICAgICA8di1yb3cganVzdGlmeT0iY2VudGVyIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8di1jb2wgbWQ9IjEyIiBsZz0iNiIgY29scz0iMTIiIGNsYXNzPSJtdF9sZy0tNTAgbXRfbWQtLTMwIG10X3NtLS0zMCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50ICI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJzdWJ0aXRsZSI+PC9wPgogICAgICAgICAgICA8aDIgY2xhc3M9ImZvbnRXZWlnaHQ1MDAiPkNvYnJhbsOnYXMgYXV0b21hdGl6YWRhczwvaDI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgQ29udHJvbGUgY29tIG1haXMgcHJlY2lzw6NvIG8gc2V1IGZsdXhvIGRlIGNhaXhhLiBOw7NzIGVtaXRpbW9zIGFzIGNvYnJhbsOnYXMsIGVudmlhbW9zIHBvciBlLW1haWwgZSBXaGF0c2FwcCBkZSBmb3JtYSBhdXRvbcOhdGljYS4gVm9jw6ogYWluZGEgdGVtIGFjZXNzbyBhIHLDqWd1YSBkZSBjb2JyYW7Dp2EgY29tIHRvZG9zIG9zIHN0YXR1cyBkb3MgcGFnYW1lbnRvcyBlIGluYWRpbXBsw6puY2lhIHBvciB0ZW1wbyBkZSBhdHJhc28gZW0gdGVtcG8gcmVhbC4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC92LWNvbD4KCiAgICAgICAgPHYtY29sIGxnPSI0IiBtZD0iMTIiIGNvbHM9IjEyIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2lnbmVyLXRodW1ibmFpbCBpbWciPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJpbWciIHNyYz0iLi4vLi4vYXNzZXRzL2ltYWdlcy9zZXJ2aWNvL2NvYnJhbmNhLnN2ZyIgYWx0PSJGZWF0dXJlZCBJbWFnZXMiLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L2Rpdj4gCgogICAgPGRpdiBjbGFzcz0icm4tY29udGVudC1ib3gtYXJlYSBybi1jb250ZW50LWJveC1zdHlsZS0tMSBiZ19jb2xvci0tMSIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGQUZBRkEiPgogICAgICA8di1yb3cganVzdGlmeT0iY2VudGVyIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8di1jb2wgbGc9IjQiIG1kPSIxMiIgY29scz0iMTIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZGVzaWduZXItdGh1bWJuYWlsIGltZyI+CiAgICAgICAgICAgIDxpbWcgIHNyYz0iLi4vLi4vYXNzZXRzL2ltYWdlcy9zZXJ2aWNvL2NsaWVudGUuc3ZnIiBhbHQ9IkZlYXR1cmVkIEltYWdlcyIvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC92LWNvbD4KCiAgICAgICAgPHYtY29sIG1kPSIxMiIgbGc9IjYiIGNvbHM9IjEyIiBjbGFzcz0ibXRfbGctLTUwIG10X21kLS0zMCBtdF9zbS0tMzAiPgogICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJzdWJ0aXRsZSI+PC9wPgogICAgICAgICAgICA8aDIgY2xhc3M9ImZvbnRXZWlnaHQ1MDAiPlDDoWdpbmEgZG8gY29tcHJhZG9yIGRvIExvdGU8L2gyPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICBTZXUgY2xpZW50ZSBwb2RlIGVtaXRpciBhIDJhIHZpYSBkZSBib2xldG8sIGdlcmFyIGJvbGV0byBkZSBxdWl0YcOnw6NvIGUgYW50ZWNpcGHDp8OjbyBkZSBwYXJjZWxhcywgYWzDqW0gZGUgZGVzZnJ1dGFyIGRvIHRvdGFsIGNvbnRyb2xlIGRlIHNldXMgcGFnYW1lbnRvcyBlIGVtaXRpciBvIGhpc3TDs3JpY28gYW51YWwgcGFyYSBkZWNsYXJhw6fDo28gZG8gSVJQRi4gCiAgICAgICAgICAgICAgQ29tIGEgU2NhZSB2b2PDqiBkaXNwb25pYmlsaXphIHVtYSBww6FnaW5hIHBhcmEgbyBjb21wcmFkb3IgY29tIHRvZGFzIGFzIGluZm9ybWHDp8O1ZXMgcXVlIGVsZSBwcmVjaXNhLiBDb20gaXNzbywgcmVkdXphIHRyYWJhbGhvcyBvcGVyYWNpb25haXMgZG8gc2V1IHRpbWUuCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L2Rpdj4gCgogICAgPGRpdiBjbGFzcz0icm4tY29udGVudC1ib3gtYXJlYSBybi1jb250ZW50LWJveC1zdHlsZS0tMSBiZ19jb2xvci0tMSIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGQUZBRkEiPgogICAgICA8di1yb3cganVzdGlmeT0iY2VudGVyIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8di1jb2wgbWQ9IjEyIiBsZz0iNiIgY29scz0iMTIiIGNsYXNzPSJtdF9sZy0tNTAgbXRfbWQtLTMwIG10X3NtLS0zMCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgPHAgY2xhc3M9InN1YnRpdGxlIj48L3A+CiAgICAgICAgICAgIDxoMiBjbGFzcz0iZm9udFdlaWdodDUwMCI+RGFzaGJvYXJkcyBlIEtQSVM8L2gyPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgQ29tIERhc2hib2FyZHMgZSBLUElTIGRhIFNjYWUgw6kgcG9zc8OtdmVsIHZpc3VhbGl6YXIgZGFkb3MgZGUgZmF0dXJhbWVudG8gbWVuc2FsLCB2ZW5kYXMgcG9yIGNvcnJldG9yLCBpbmFkaW1wbMOqbmNpYSBtZW5zYWwsIGFjb3Jkb3MgcmVhbGl6YWRvcyBlIG11aXRvIG1haXMsIHR1ZG8gZW0gZm9ybWF0byBncsOhZmljbyBkZSBmw6FjaWwgZSByw6FwaWRhIGxlaXR1cmEgZGEgc2l0dWHDp8OjbyBkbyBzZXUgbG90ZWFtZW50byBvdSBkYSBzdWEgZW1wcmVzYS4gQ29tIG9zIHJlc3VsdGFkb3MgZGUgZGVzZW1wZW5obyBmaWNhIGbDoWNpbCB0cmHDp2FyIGUgYWNvbXBhbmhhciDDoHMgbWV0YXMgZGEgZW1wcmVzYSwgaW5jb3Jwb3JhbmRvIG9zIGRhZG9zIGZpbmFuY2Vpcm9zIGUgb3BlcmFjaW9uYWlzIGFvIHByb2Nlc3NvIGRlIG5lZ8OzY2lvLgogICAgICAgICAgICA8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3YtY29sPgogICAgICAgIDx2LWNvbCBsZz0iNCIgbWQ9IjEyIiBjb2xzPSIxMiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNpZ25lci10aHVtYm5haWwgaW1nIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nIiBzcmM9Ii4uLy4uL2Fzc2V0cy9pbWFnZXMvc2Vydmljby9kYXNoYm9hcmRzMy5zdmciIGFsdD0iRmVhdHVyZWQgSW1hZ2VzIi8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3YtY29sPgogICAgICA8L3Ytcm93PgogICAgPC9kaXY+IAoKCiAgICA8di1yb3cgY2xhc3M9InB0LS0xMDAiPgogICAgICA8di1jb2wgbGc9IjEyIiBtZD0iMTIiIGNvbHM9IjEyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhYm91dC1pbm5lciBpbm5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLXRpdGxlIHRleHQtbGVmdCI+CiAgICAgICAgICAgIDx2LXJvdyBjbGFzcz0ic2VjdGlvbi10aXRsZS1jZW50ZXIiID4KICAgICAgICAgICAgICA8di1jb2wgbGc9IjIiIG1kPSIyIiBjb2xzPSIxMiIvPgogICAgICAgICAgICAgIDx2LWNvbCBsZz0iOCIgbWQ9IjEyIiBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRpbmctdGl0bGUiPkNvbmhlw6dhIG5vc3NvcyBQbGFub3M8L2gyPgogICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgPC9kaXY+CiAgICAgIDwvdi1jb2w+CiAgICA8L3Ytcm93PgoKCiAgICA8c2VjdGlvbiBjbGFzcz0icGxhbm9zIiBpZD0icGxhbm9zIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtYXgtd2lkdGgiPgogICAgICAgICAgICAgIDxoMiBjbGFzcz0idGl0bGUiPlBsYW5vczwvaDI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2Vydi1jb250ZW50IGNhcm91c2VsIG93bC1jYXJvdXNlbCI+IAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4gCiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3giPiAKICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5BdMOpIDUwMCBsb3RlczwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0IiBzdHlsZT0iZm9udC1zaXplOiA1MXB4Ij5SJCA0LDUwPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UG9yIGxvdGU8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL21hdGVyaWFpcy5zY2FlLmFkbS5ici9scC13aGF0c2FwcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250cmF0ZSBBZ29yYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGJyPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3giPiAgIAogICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkF0w6kgMi4wMDAgbG90ZXM8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCIgc3R5bGU9ImZvbnQtc2l6ZTogNTFweCI+UiQgNCwwMDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlBvciBsb3RlPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9tYXRlcmlhaXMuc2NhZS5hZG0uYnIvbHAtd2hhdHNhcHAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udHJhdGUgQWdvcmEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pjxicj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4gICAKCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQiPiAKICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UG9yIGxvdGUgY29tIGJvbGV0byBpbmNsdXNvPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQiPkFjaW1hIGRlIDIgbWlsIGxvdGVzPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL21hdGVyaWFpcy5zY2FlLmFkbS5ici9scC13aGF0c2FwcCIgc3R5bGU9ImJhY2tncm91bmQ6ICNlZTk2MTM7IGJvcmRlci1yYWRpdXM6NjsgYm9yZGVyOiAycHggc29saWQgI2VlOTYxMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbnRyZSBlbSBDb250YXRvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGJyPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICA8L3NlY3Rpb24+CgogCgogIDwhLS0gQ09OVEFET1IgIC0tPgogICA8IS0tPGRpdgogICAgY2xhc3M9InJuLWNvdW50ZXJ1cC1hcmVhIHB0X3NtLS01MCBwdC0tNjAgcHRfbWQtLTUwIHBiLS0xMjAgYmdfY29sb3ItLTEiCiAgPgogICAgPHYtY29udGFpbmVyPgogICAgICA8Q29udGFkb3IgLz4KICAgIDwvdi1jb250YWluZXI+CiAgPC9kaXY+IC0tPgogIDwhLS0gRklOQUwgQ09OVEFET1IgLS0+CgogIDwhLS0gQ09OU1RSVVRPUkEgICAtLT4KICA8YnI+PGJyPjxicj48YnI+PGJyPgogIDwhLS0gPGRpdgogICAgY2xhc3M9IgogICAgICBjYWxsLXRvLWFjdGlvbi13cmFwcGVyIGNhbGwtdG8tYWN0aW9uLXR3bwogICAgICBiZ19pbWFnZSBiZ19pbWFnZS0tMzMKICAgICAgdGV4dC13aGl0ZS13cmFwcGVyCiAgICAgIHB0Yi0tMTUwCiAgICAgIHB0Yl9sZy0tODAKICAgICAgcHRiX21kLS04MAogICAgICBwdGJfc20tLTgwCiAgICAiCiAgICBpZD0iY29uc3RydXRvcmEiCiAgPgogICAgPHYtY29udGFpbmVyPgogICAgICA8Q2FsbFRvQWN0aW9uVHdvIC8+CiAgICA8L3YtY29udGFpbmVyPgogIDwvZGl2PiAgLS0+CiAgPCEtLUZJTkFMIENPTlNUUlVUT1JBICAtLT4KCiAgPCEtLSBTdGFydCBQb3J0Zm9saW8gQXJlYSAgLS0+CiAgIDwhLS0gPGRpdiBjbGFzcz0icm4tc2VjdGlvbi1nYXAgYmdfY29sb3ItLTEiIGlkPSJ2YW50YWdlbnMiPgogICAgPGRpdiBjbGFzcz0iIj4KICAgICAgCiAgICAgICAgPHYtcm93IGNsYXNzPSJzcGFjaW5nLXRleHQiPgogICAgICAgICAgPHYtY29sIGxnPSIxMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24tdGl0bGUgdGV4dC1sZWZ0IG1iLS0wIG1iX3NtLS0wIG1iX21kLS0wIj4KICAgICAgICAgICAgICA8aDI+TyBxdWUgdm9jw6ogZ2FuaGEgYW8gZmF6ZXIgcGFydGUgZGEgTmV2b29uPzwvaDI+CiAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICBDb25oZcOnYSBhcyB2YW50YWdlbnMgcXVlIG8gc2VydmnDp28gZGEgTmV2b29uIHRyw6FzIHByYSB2b2PDqiwKICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgdmVuZGEgbWFpcyBpbcOzdmVpcyBjb20gemVybyBidXJvY3JhY2lhLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3YtY29sPgogICAgICAgIDwvdi1yb3c+CiAgICAgICAKICAgICAgPFNlcnZpY2UgLz4KICAgIDwvZGl2PgogIDwvZGl2PiAgICAtLT4KICA8YnIgLz4KCiAgPCEtLSBQRVJHVU5UQVMgICAKICA8ZGl2IGNsYXNzPSIgbWItLTYwIGJnX2NvbG9yLS0xIj4KICAgIDxkaXYgY2xhc3M9InBvcnRmb2xpby1zYWNvdXNlbC1pbm5lciIgaWQ9InBlcmd1bnRhcyI+CiAgICAgIDxQZXJndW50YXMgLz4KICAgIDwvZGl2PgogIDwvZGl2Pi0tPgogIDwhLS0gUEVSR1VOVEFTICAtLT4KCiAgPCEtLSBST0RBUMOJICAtLT4KICA8Rm9vdGVyIC8+CiAgPCEtLSBST0RBUMOJICAtLT4KPC9kaXY+Cg=="},null]}