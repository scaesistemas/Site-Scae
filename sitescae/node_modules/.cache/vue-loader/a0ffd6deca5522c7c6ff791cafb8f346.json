{"remainingRequest":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-visibility-sensor\\visibility-sensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-visibility-sensor\\visibility-sensor.vue","mtime":499162500000},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae_of\\sitescae\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["visibility-sensor.vue"],"names":[],"mappingsfile":"visibility-sensor.vue","sourceRoot":"node_modules/vue-visibility-sensor","sourcesContent":["<script>\n  'use strict';\n\n  /**\n   * @param {{ top: Number, left: Number, bottom: Number, right: Number, width: Number, height: Number }} rect\n   * @returns {{ top: Number, left: Number, bottom: Number, right: Number, width: Number, height: Number }}\n   * */\n  function normalizeRect (rect) {\n    if (rect.width === undefined) {\n      rect.width = rect.right - rect.left;\n    }\n\n    if (rect.height === undefined) {\n      rect.height = rect.bottom - rect.top;\n    }\n\n    return rect;\n  }\n\n  /**\n   * @param {{ top: Number, left: Number, bottom: Number, right: Number }} rect\n   * @returns {{ top: Number, left: Number, bottom: Number, right: Number }}\n   * */\n  function roundRectDown (rect) {\n    return {\n      top: Math.floor(rect.top),\n      left: Math.floor(rect.left),\n      bottom: Math.floor(rect.bottom),\n      right: Math.floor(rect.right)\n    };\n  }\n\n  export default {\n    name: 'VisibilitySensor',\n    props: {\n      active: {\n        type: Boolean,\n        default: true\n      },\n      partialVisibility: {\n        type: [Boolean, String],\n        default: false,\n        validator: function (v) {\n          if (typeof v === 'boolean') {\n            return true;\n          } else {\n            return ['top', 'right', 'bottom', 'left'].indexOf(v) > -1;\n          }\n        }\n      },\n      minTopValue: {\n        type: Number,\n        default: 0\n      },\n      scrollCheck: {\n        type: Boolean,\n        default: false\n      },\n      scrollDelay: {\n        type: Number,\n        default: 250\n      },\n      scrollThrottle: {\n        type: Number,\n        default: -1\n      },\n      resizeCheck: {\n        type: Boolean,\n        default: false\n      },\n      resizeDelay: {\n        type: Number,\n        default: 250\n      },\n      resizeThrottle: {\n        type: Number,\n        default: -1\n      },\n      intervalCheck: {\n        type: Boolean,\n        default: true\n      },\n      intervalDelay: {\n        type: Number,\n        default: 100\n      },\n      delayedCall: {\n        type: Boolean,\n        default: false\n      },\n      offset: {\n        type: Object,\n        default: () => {\n        }\n        // should be\n        // {\n        //   top: Number,\n        //   left: Number,\n        //   right: Number,\n        //   bottom: Number,\n        // }\n      },\n      containment: {\n        default: null\n      }\n    },\n    data () {\n      return {\n        isVisible: null,\n        visibilityRect: {}\n      };\n    },\n    mounted () {\n      if (this.active) {\n        this.startWatching();\n      }\n    },\n    updated () {\n\n    },\n    beforeDestroy () {\n      this.stopWatching();\n    },\n    methods: {\n      getContainer () {\n        return this.containment || window;\n      },\n      addEventListener (target, event, delay, throttle) {\n        if (!this.debounceCheck) {\n          this.debounceCheck = {};\n        }\n        let timeout;\n        let fn;\n        const later = () => {\n          timeout = null;\n          this.check();\n        };\n\n        if (throttle > -1) {\n          fn = () => {\n            if (!timeout) {\n              timeout = setTimeout(later, throttle || 0);\n            }\n          };\n        } else {\n          fn = () => {\n            clearTimeout(timeout);\n            timeout = setTimeout(later, delay || 0);\n          };\n        }\n\n        const info = {\n          target,\n          fn,\n          getLastTimeout: () => timeout\n        };\n\n        target.addEventListener(event, info.fn);\n        this.debounceCheck[event] = info;\n      },\n      startWatching () {\n        if (this.debounceCheck || this.interval) {\n          return;\n        }\n\n        if (this.intervalCheck) {\n          this.interval = setInterval(() => this.check(), this.intervalDelay);\n        }\n\n        if (this.scrollCheck) {\n          this.addEventListener(\n            this.getContainer(),\n            'scroll',\n            this.scrollDelay,\n            this.scrollThrottle\n          );\n        }\n\n        if (this.resizeCheck) {\n          this.addEventListener(\n            window,\n            'resize',\n            this.resizeDelay,\n            this.resizeThrottle\n          );\n        }\n\n        !this.delayedCall && this.check();\n      },\n      stopWatching () {\n        if (this.debounceCheck) {\n          // clean up event listeners and their debounce callers\n          for (let debounceEvent in this.debounceCheck) {\n            if (this.debounceCheck.hasOwnProperty(debounceEvent)) {\n              const debounceInfo = this.debounceCheck[debounceEvent];\n\n              clearTimeout(debounceInfo.getLastTimeout());\n              debounceInfo.target.removeEventListener(\n                debounceEvent,\n                debounceInfo.fn\n              );\n\n              this.debounceCheck[debounceEvent] = null;\n            }\n          }\n        }\n        this.debounceCheck = null;\n\n        if (this.interval) {\n          clearInterval(this.interval);\n          this.interval = null;\n        }\n      },\n      check () {\n        const el = this.$el;\n        let rect;\n        let containmentRect;\n\n        if (!el) {\n          return;\n        }\n\n        rect = normalizeRect(roundRectDown(el.getBoundingClientRect()));\n\n        if (this.containment) {\n          const containmentDOMRect = this.containment.getBoundingClientRect();\n          containmentRect = {\n            top: containmentDOMRect.top,\n            left: containmentDOMRect.left,\n            bottom: containmentDOMRect.bottom,\n            right: containmentDOMRect.right\n          };\n        } else {\n          containmentRect = {\n            top: 0,\n            left: 0,\n            bottom: window.innerHeight || document.documentElement.clientHeight,\n            right: window.innerWidth || document.documentElement.clientWidth\n          };\n        }\n\n        const offset = this.offset || {};\n        if (typeof offset === 'object') {\n          containmentRect.top += offset.top || 0;\n          containmentRect.left += offset.left || 0;\n          containmentRect.bottom -= offset.bottom || 0;\n          containmentRect.right -= offset.right || 0;\n        }\n\n        const visibilityRect = {\n          top: rect.top >= containmentRect.top,\n          left: rect.left >= containmentRect.left,\n          bottom: rect.bottom <= containmentRect.bottom,\n          right: rect.right <= containmentRect.right\n        };\n\n        const hasSize = rect.height > 0 && rect.width > 0;\n\n        let isVisible =\n          hasSize &&\n          visibilityRect.top &&\n          visibilityRect.left &&\n          visibilityRect.bottom &&\n          visibilityRect.right;\n\n        // check for partial visibility\n        if (hasSize && this.partialVisibility) {\n          let partialVisible =\n            rect.top <= containmentRect.bottom &&\n            rect.bottom >= containmentRect.top &&\n            rect.left <= containmentRect.right &&\n            rect.right >= containmentRect.left;\n\n          // account for partial visibility on a single edge\n          if (typeof this.partialVisibility === 'string') {\n            partialVisible = visibilityRect[this.partialVisibility];\n          }\n\n          // if we have minimum top visibility set by props, lets check, if it meets the passed value\n          // so if for instance element is at least 200px in viewport, then show it.\n          isVisible = this.minTopValue\n            ? partialVisible &&\n            rect.top <= containmentRect.bottom - this.minTopValue\n            : partialVisible;\n        }\n\n        if (this.isVisible !== isVisible) {\n          this.isVisible = isVisible;\n          this.visibilityRect = visibilityRect;\n          this.$emit('change', isVisible);\n        }\n      }\n    },\n    render(createElement, context) {\n      return this.$slots.default || createElement('div', { style: 'height: 1px; width: 100%;' });\n    },\n  };\n</script>\n"]}]}