{"remainingRequest":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\vue-visibility-sensor\\visibility-sensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\vue-visibility-sensor\\visibility-sensor.vue","mtime":1654273349855},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654273329654},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\babel-loader\\lib\\index.js","mtime":1654273323368},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654273329654},{"path":"C:\\Users\\Dev1\\Documents\\Fontes\\site-scae\\sitescae\\node_modules\\vue-loader\\lib\\index.js","mtime":1654273349611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["visibility-sensor.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"visibility-sensor.vue","sourceRoot":"node_modules/vue-visibility-sensor","sourcesContent":["<script>\r\n  'use strict';\r\n\r\n  /**\r\n   * @param {{ top: Number, left: Number, bottom: Number, right: Number, width: Number, height: Number }} rect\r\n   * @returns {{ top: Number, left: Number, bottom: Number, right: Number, width: Number, height: Number }}\r\n   * */\r\n  function normalizeRect (rect) {\r\n    if (rect.width === undefined) {\r\n      rect.width = rect.right - rect.left;\r\n    }\r\n\r\n    if (rect.height === undefined) {\r\n      rect.height = rect.bottom - rect.top;\r\n    }\r\n\r\n    return rect;\r\n  }\r\n\r\n  /**\r\n   * @param {{ top: Number, left: Number, bottom: Number, right: Number }} rect\r\n   * @returns {{ top: Number, left: Number, bottom: Number, right: Number }}\r\n   * */\r\n  function roundRectDown (rect) {\r\n    return {\r\n      top: Math.floor(rect.top),\r\n      left: Math.floor(rect.left),\r\n      bottom: Math.floor(rect.bottom),\r\n      right: Math.floor(rect.right)\r\n    };\r\n  }\r\n\r\n  export default {\r\n    name: 'VisibilitySensor',\r\n    props: {\r\n      active: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      partialVisibility: {\r\n        type: [Boolean, String],\r\n        default: false,\r\n        validator: function (v) {\r\n          if (typeof v === 'boolean') {\r\n            return true;\r\n          } else {\r\n            return ['top', 'right', 'bottom', 'left'].indexOf(v) > -1;\r\n          }\r\n        }\r\n      },\r\n      minTopValue: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      scrollCheck: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      scrollDelay: {\r\n        type: Number,\r\n        default: 250\r\n      },\r\n      scrollThrottle: {\r\n        type: Number,\r\n        default: -1\r\n      },\r\n      resizeCheck: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      resizeDelay: {\r\n        type: Number,\r\n        default: 250\r\n      },\r\n      resizeThrottle: {\r\n        type: Number,\r\n        default: -1\r\n      },\r\n      intervalCheck: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      intervalDelay: {\r\n        type: Number,\r\n        default: 100\r\n      },\r\n      delayedCall: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      offset: {\r\n        type: Object,\r\n        default: () => {\r\n        }\r\n        // should be\r\n        // {\r\n        //   top: Number,\r\n        //   left: Number,\r\n        //   right: Number,\r\n        //   bottom: Number,\r\n        // }\r\n      },\r\n      containment: {\r\n        default: null\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        isVisible: null,\r\n        visibilityRect: {}\r\n      };\r\n    },\r\n    mounted () {\r\n      if (this.active) {\r\n        this.startWatching();\r\n      }\r\n    },\r\n    updated () {\r\n\r\n    },\r\n    beforeDestroy () {\r\n      this.stopWatching();\r\n    },\r\n    methods: {\r\n      getContainer () {\r\n        return this.containment || window;\r\n      },\r\n      addEventListener (target, event, delay, throttle) {\r\n        if (!this.debounceCheck) {\r\n          this.debounceCheck = {};\r\n        }\r\n        let timeout;\r\n        let fn;\r\n        const later = () => {\r\n          timeout = null;\r\n          this.check();\r\n        };\r\n\r\n        if (throttle > -1) {\r\n          fn = () => {\r\n            if (!timeout) {\r\n              timeout = setTimeout(later, throttle || 0);\r\n            }\r\n          };\r\n        } else {\r\n          fn = () => {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, delay || 0);\r\n          };\r\n        }\r\n\r\n        const info = {\r\n          target,\r\n          fn,\r\n          getLastTimeout: () => timeout\r\n        };\r\n\r\n        target.addEventListener(event, info.fn);\r\n        this.debounceCheck[event] = info;\r\n      },\r\n      startWatching () {\r\n        if (this.debounceCheck || this.interval) {\r\n          return;\r\n        }\r\n\r\n        if (this.intervalCheck) {\r\n          this.interval = setInterval(() => this.check(), this.intervalDelay);\r\n        }\r\n\r\n        if (this.scrollCheck) {\r\n          this.addEventListener(\r\n            this.getContainer(),\r\n            'scroll',\r\n            this.scrollDelay,\r\n            this.scrollThrottle\r\n          );\r\n        }\r\n\r\n        if (this.resizeCheck) {\r\n          this.addEventListener(\r\n            window,\r\n            'resize',\r\n            this.resizeDelay,\r\n            this.resizeThrottle\r\n          );\r\n        }\r\n\r\n        !this.delayedCall && this.check();\r\n      },\r\n      stopWatching () {\r\n        if (this.debounceCheck) {\r\n          // clean up event listeners and their debounce callers\r\n          for (let debounceEvent in this.debounceCheck) {\r\n            if (this.debounceCheck.hasOwnProperty(debounceEvent)) {\r\n              const debounceInfo = this.debounceCheck[debounceEvent];\r\n\r\n              clearTimeout(debounceInfo.getLastTimeout());\r\n              debounceInfo.target.removeEventListener(\r\n                debounceEvent,\r\n                debounceInfo.fn\r\n              );\r\n\r\n              this.debounceCheck[debounceEvent] = null;\r\n            }\r\n          }\r\n        }\r\n        this.debounceCheck = null;\r\n\r\n        if (this.interval) {\r\n          clearInterval(this.interval);\r\n          this.interval = null;\r\n        }\r\n      },\r\n      check () {\r\n        const el = this.$el;\r\n        let rect;\r\n        let containmentRect;\r\n\r\n        if (!el) {\r\n          return;\r\n        }\r\n\r\n        rect = normalizeRect(roundRectDown(el.getBoundingClientRect()));\r\n\r\n        if (this.containment) {\r\n          const containmentDOMRect = this.containment.getBoundingClientRect();\r\n          containmentRect = {\r\n            top: containmentDOMRect.top,\r\n            left: containmentDOMRect.left,\r\n            bottom: containmentDOMRect.bottom,\r\n            right: containmentDOMRect.right\r\n          };\r\n        } else {\r\n          containmentRect = {\r\n            top: 0,\r\n            left: 0,\r\n            bottom: window.innerHeight || document.documentElement.clientHeight,\r\n            right: window.innerWidth || document.documentElement.clientWidth\r\n          };\r\n        }\r\n\r\n        const offset = this.offset || {};\r\n        if (typeof offset === 'object') {\r\n          containmentRect.top += offset.top || 0;\r\n          containmentRect.left += offset.left || 0;\r\n          containmentRect.bottom -= offset.bottom || 0;\r\n          containmentRect.right -= offset.right || 0;\r\n        }\r\n\r\n        const visibilityRect = {\r\n          top: rect.top >= containmentRect.top,\r\n          left: rect.left >= containmentRect.left,\r\n          bottom: rect.bottom <= containmentRect.bottom,\r\n          right: rect.right <= containmentRect.right\r\n        };\r\n\r\n        const hasSize = rect.height > 0 && rect.width > 0;\r\n\r\n        let isVisible =\r\n          hasSize &&\r\n          visibilityRect.top &&\r\n          visibilityRect.left &&\r\n          visibilityRect.bottom &&\r\n          visibilityRect.right;\r\n\r\n        // check for partial visibility\r\n        if (hasSize && this.partialVisibility) {\r\n          let partialVisible =\r\n            rect.top <= containmentRect.bottom &&\r\n            rect.bottom >= containmentRect.top &&\r\n            rect.left <= containmentRect.right &&\r\n            rect.right >= containmentRect.left;\r\n\r\n          // account for partial visibility on a single edge\r\n          if (typeof this.partialVisibility === 'string') {\r\n            partialVisible = visibilityRect[this.partialVisibility];\r\n          }\r\n\r\n          // if we have minimum top visibility set by props, lets check, if it meets the passed value\r\n          // so if for instance element is at least 200px in viewport, then show it.\r\n          isVisible = this.minTopValue\r\n            ? partialVisible &&\r\n            rect.top <= containmentRect.bottom - this.minTopValue\r\n            : partialVisible;\r\n        }\r\n\r\n        if (this.isVisible !== isVisible) {\r\n          this.isVisible = isVisible;\r\n          this.visibilityRect = visibilityRect;\r\n          this.$emit('change', isVisible);\r\n        }\r\n      }\r\n    },\r\n    render(createElement, context) {\r\n      return this.$slots.default || createElement('div', { style: 'height: 1px; width: 100%;' });\r\n    },\r\n  };\r\n</script>\r\n"]}]}